From b9e717367c395490149495cf375911b5d9de889e Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Sat, 23 Jul 2022 06:53:08 +0100
Subject: [PATCH] patch 9.0.0060: accessing uninitialized memory when
 completing long line

Problem:    Accessing uninitialized memory when completing long line.
Solution:   Terminate string with NUL.
---
 src/insexpand.c                   | 1 +
 src/testdir/test_ins_complete.vim | 7 +++++++
 src/version.c                     | 2 ++
 3 files changed, 10 insertions(+)

--- vim-8.2.3995.orig/src/insexpand.c
+++ vim-8.2.3995/src/insexpand.c
@@ -555,6 +555,7 @@ ins_compl_infercase_gettext(
 	    // growarray.  Add the character in the next round.
 	    if (ga_grow(&gap, IOSIZE) == FAIL)
 		return (char_u *)"[failed]";
+	    *p = NUL;
 	    STRCPY(gap.ga_data, IObuff);
 	    gap.ga_len = STRLEN(IObuff);
 	}
--- vim-8.2.3995.orig/src/testdir/test_ins_complete.vim
+++ vim-8.2.3995/src/testdir/test_ins_complete.vim
@@ -1862,6 +1862,13 @@ func Test_infercase_very_long_line()
   exe "normal 2Go\<C-X>\<C-L>\<Esc>"
   call assert_equal(longLine, getline(3))
 
+  " check that the too long text is NUL terminated
+  %del
+  norm o
+  norm 1987ax
+  exec "norm ox\<C-X>\<C-L>"
+  call assert_equal(repeat('x', 1987), getline(3))
+
   bwipe!
   set noic noinfercase
 endfunc
