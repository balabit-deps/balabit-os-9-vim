From 8b91e71441069b1dde9ac9ff9d9a829b1b4aecca Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Sun, 17 Apr 2022 15:06:35 +0100
Subject: [PATCH] patch 8.2.4774: crash when using a number for lambda name

Problem:    Crash when using a number for lambda name.
Solution:   Check the type of the lambda reference.
---

From 8b91e71441069b1dde9ac9ff9d9a829b1b4aecca Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Sun, 17 Apr 2022 15:06:35 +0100
Subject: [PATCH] patch 8.2.4774: crash when using a number for lambda name

Problem:    Crash when using a number for lambda name.
Solution:   Check the type of the lambda reference.
---
 src/errors.h                |  4 ++++
 src/eval.c                  | 16 ++++++++++------
 src/testdir/test_lambda.vim |  4 ++++
 src/version.c               |  2 ++
 4 files changed, 20 insertions(+), 6 deletions(-)

--- vim-8.2.3995.orig/src/errors.h
+++ vim-8.2.3995/src/errors.h
@@ -2150,3 +2150,7 @@ EXTERN char e_cmd_mapping_must_end_with_
 	INIT(= N_("E1255: <Cmd> mapping must end with <CR>"));
 EXTERN char e_string_or_function_required_for_argument_nr[]
 	INIT(= N_("E1256: String or function required for argument %d"));
+#ifdef FEAT_EVAL
+EXTERN char e_string_or_function_required_for_arrow_parens_expr[]
+	INIT(= N_("E1275: String or function required for ->(expr)"));
+#endif
--- vim-8.2.3995.orig/src/eval.c
+++ vim-8.2.3995/src/eval.c
@@ -3872,19 +3872,23 @@ eval_lambda(
 	++*arg;
 	ret = eval1(arg, rettv, evalarg);
 	*arg = skipwhite_and_linebreak(*arg, evalarg);
-	if (**arg == ')')
+	if (**arg != ')')
 	{
-	    ++*arg;
+	    emsg(_(e_missing_closing_paren));
+	    return FAIL;
 	}
-	else
+	if (rettv->v_type != VAR_STRING && rettv->v_type != VAR_FUNC
+					       && rettv->v_type != VAR_PARTIAL)
 	{
-	    emsg(_(e_missing_closing_paren));
-	    ret = FAIL;
+	    emsg(_(e_string_or_function_required_for_arrow_parens_expr));
+	    return FAIL;
 	}
+	++*arg;
     }
     if (ret != OK)
 	return FAIL;
-    else if (**arg != '(')
+
+    if (**arg != '(')
     {
 	if (verbose)
 	{
--- vim-8.2.3995.orig/src/testdir/test_lambda.vim
+++ vim-8.2.3995/src/testdir/test_lambda.vim
@@ -66,6 +66,10 @@ function Test_lambda_fails()
   echo assert_fails('echo 10->{a -> a + 2}', 'E107:')
 
   call assert_fails('eval 0->(', "E110: Missing ')'")
+  call assert_fails('eval 0->(3)()', "E1275:")
+  call assert_fails('eval 0->([3])()', "E1275:")
+  call assert_fails('eval 0->({"a": 3})()', "E1275:")
+  call assert_fails('eval 0->(xxx)()', "E121:")
 endfunc
 
 func Test_not_lamda()
--- vim-8.2.3995.orig/src/version.c
+++ vim-8.2.3995/src/version.c
@@ -751,6 +751,8 @@ static char *(features[]) =
 static int included_patches[] =
 {   /* Add new patch number below this line */
 /**/
+    4774,
+/**/
     4646,
 /**/
     4563,
