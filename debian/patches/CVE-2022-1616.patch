From d88934406c5375d88f8f1b65331c9f0cab68cc6c Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Fri, 6 May 2022 20:38:47 +0100
Subject: [PATCH] patch 8.2.4895: buffer overflow with invalid command with
 composing chars

Problem:    Buffer overflow with invalid command with composing chars.
Solution:   Check that the whole character fits in the buffer.
---
 src/ex_docmd.c               |  4 +++-
 src/testdir/test_cmdline.vim | 11 +++++++++++
 src/version.c                |  2 ++
 3 files changed, 16 insertions(+), 1 deletion(-)

--- vim-8.2.3995.orig/src/ex_docmd.c
+++ vim-8.2.3995/src/ex_docmd.c
@@ -3379,7 +3379,7 @@ append_command(char_u *cmd)
 
     STRCAT(IObuff, ": ");
     d = IObuff + STRLEN(IObuff);
-    while (*s != NUL && d - IObuff < IOSIZE - 7)
+    while (*s != NUL && d - IObuff + 5 < IOSIZE)
     {
 	if (enc_utf8 ? (s[0] == 0xc2 && s[1] == 0xa0) : *s == 0xa0)
 	{
@@ -3387,6 +3387,8 @@ append_command(char_u *cmd)
 	    STRCPY(d, "<a0>");
 	    d += 4;
 	}
+	else if (d - IObuff + (*mb_ptr2len)(s) + 1 >= IOSIZE)
+	    break;
 	else
 	    MB_COPY_CHAR(s, d);
     }
--- vim-8.2.3995.orig/src/testdir/test_cmdline.vim
+++ vim-8.2.3995/src/testdir/test_cmdline.vim
@@ -1945,6 +1945,17 @@ func Test_cmd_map_cmdlineChanged()
   augroup END
 endfunc
 
+" this was going over the end of IObuff
+func Test_report_error_with_composing()
+  let caught = 'no'
+  try
+    exe repeat('0', 987) .. "0\xdd\x80\xdd\x80\xdd\x80\xdd\x80"
+  catch /E492:/
+    let caught = 'yes'
+  endtry
+  call assert_equal('yes', caught)
+endfunc
+
 " Test for the 'suffixes' option
 func Test_suffixes_opt()
   call writefile([], 'Xfile')
--- vim-8.2.3995.orig/src/version.c
+++ vim-8.2.3995/src/version.c
@@ -751,6 +751,8 @@ static char *(features[]) =
 static int included_patches[] =
 {   /* Add new patch number below this line */
 /**/
+    4895,
+/**/
     4774,
 /**/
     4646,
