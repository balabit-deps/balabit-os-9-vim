From 1889f499a4f248cd84e0e0bf6d0d820016774494 Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Tue, 16 Aug 2022 19:34:44 +0100
Subject: [PATCH] patch 9.0.0221: accessing freed memory if compiling nested
 function fails

Problem:    Accessing freed memory if compiling nested function fails.
Solution:   Mess up the variable name so that it won't be found.
---
 src/testdir/test_vim9_func.vim | 12 ++++++++++++
 src/version.c                  |  2 ++
 src/vim9compile.c              |  7 +++++--
 3 files changed, 19 insertions(+), 2 deletions(-)

--- vim-8.2.3995.orig/src/vim9compile.c
+++ vim-8.2.3995/src/vim9compile.c
@@ -823,6 +823,7 @@ compile_nested_function(exarg_T *eap, cc
     ufunc_T	*ufunc;
     int		r = FAIL;
     compiletype_T   compile_type;
+    lvar_T *lvar = NULL;
 
     if (eap->forceit)
     {
@@ -937,7 +938,7 @@ compile_nested_function(exarg_T *eap, cc
     else
     {
 	// Define a local variable for the function reference.
-	lvar_T	*lvar = reserve_local(cctx, func_name, name_end - name_start,
+	lvar = reserve_local(cctx, func_name, name_end - name_start,
 						    TRUE, ufunc->uf_func_type);
 
 	if (lvar == NULL)
