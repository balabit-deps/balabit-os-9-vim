From 8e4b76da1d7e987d43ca960dfbc372d1c617466f Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Sat, 7 May 2022 11:28:06 +0100
Subject: [PATCH] patch 8.2.4901: NULL pointer access when using invalid
 pattern

Problem:    NULL pointer access when using invalid pattern.
Solution:   Check for failed regexp program.
---
 src/buffer.c                | 2 +-
 src/testdir/test_buffer.vim | 7 +++++++
 src/version.c               | 2 ++
 3 files changed, 10 insertions(+), 1 deletion(-)

--- vim-8.2.3995.orig/src/buffer.c
+++ vim-8.2.3995/src/buffer.c
@@ -2869,7 +2869,7 @@ fname_match(
 	rmp->rm_ic = p_fic || ignore_case;
 	if (vim_regexec(rmp, name, (colnr_T)0))
 	    match = name;
-	else
+	else if (rmp->regprog != NULL)
 	{
 	    // Replace $(HOME) with '~' and try matching again.
 	    p = home_replace_save(NULL, name);
--- vim-8.2.3995.orig/src/testdir/test_buffer.vim
+++ vim-8.2.3995/src/testdir/test_buffer.vim
@@ -410,6 +410,13 @@ func Test_buffer_scheme()
   set shellslash&
 endfunc
 
+" this was using a NULL pointer after failing to use the pattern
+func Test_buf_pattern_invalid()
+  vsplit 0000000
+  silent! buf [0--]\&\zs*\zs*e
+  bwipe!
+endfunc
+
 " Test for the 'maxmem' and 'maxmemtot' options
 func Test_buffer_maxmem()
   " use 1KB per buffer and 2KB for all the buffers
--- vim-8.2.3995.orig/src/version.c
+++ vim-8.2.3995/src/version.c
@@ -751,6 +751,8 @@ static char *(features[]) =
 static int included_patches[] =
 {   /* Add new patch number below this line */
 /**/
+    4901,
+/**/
     4899,
 /**/
     4895,
