From 58f9befca1fa172068effad7f2ea5a9d6a7b0cca Mon Sep 17 00:00:00 2001
From: Christian Brabandt <cb@256bit.org>
Date: Tue, 14 Nov 2023 21:02:30 +0100
Subject: [PATCH] patch 9.0.2109: [security]: overflow in nv_z_get_count

Problem:  [security]: overflow in nv_z_get_count
Solution: break out, if count is too large

When getting the count for a normal z command, it may overflow for large
counts given. So verify, that we can safely store the result in a long.

Signed-off-by: Christian Brabandt <cb@256bit.org>
---
 src/normal.c                | 7 +++++++
 src/testdir/test_normal.vim | 5 +++++
 src/version.c               | 2 ++
 3 files changed, 14 insertions(+)

--- vim-8.2.3995.orig/src/normal.c
+++ vim-8.2.3995/src/normal.c
@@ -2857,7 +2857,14 @@ nv_zet(cmdarg_T *cap)
 	    if (nchar == K_DEL || nchar == K_KDEL)
 		n /= 10;
 	    else if (VIM_ISDIGIT(nchar))
+		{
+		    if (n > LONG_MAX / 10)
+		    {
+			clearopbeep(cap->oap);
+			break;
+		    }
 		n = n * 10 + (nchar - '0');
+		}
 	    else if (nchar == CAR)
 	    {
 #ifdef FEAT_GUI
--- vim-8.2.3995.orig/src/testdir/test_normal.vim
+++ vim-8.2.3995/src/testdir/test_normal.vim
@@ -3757,4 +3757,9 @@ func Test_normal_count_out_of_range()
   bwipe!
 endfunc
 
+func Test_normal34_zet_large()
+  " shouldn't cause overflow
+  norm! z9765405999999999999
+endfunc
+
 " vim: shiftwidth=2 sts=2 expandtab
--- vim-8.2.3995.orig/src/version.c
+++ vim-8.2.3995/src/version.c
@@ -4547,6 +4547,8 @@ static int included_patches[] =
 /**/
     2109,
 /**/
+    2109,
+/**/
     2108,
 /**/
     2107,
